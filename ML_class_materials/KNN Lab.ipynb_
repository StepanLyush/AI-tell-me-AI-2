{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyOgwQkqDVylpq5misInZuOJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["# Lab assignment\n","\n","# Explore and prepare data\n","  ## Pay attention on the codes used for the categorical variables and check if they need some changes.\n","# Create and evaluate a KNN model with default parameters\n","# Create and evaluate a KNN model with tuned K\n","# Create and evaluate a KNN model with features that have been shown important in the first decision tree model.\n","# Compare the metrics of the KNN models."],"metadata":{"id":"CJ-ERu8CCris"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# The dataset consists of 303 individuals data. There are 14 columns in the dataset, which are described below.\n","\n","# *   Age: displays the age of the individual\n","# *   Sex: displays the gender of the individual using the following format \n","      ## > *   1 = male\n","      ## > *   0 = female\n","# *   Chest-pain type: displays the type of chest-pain experienced by the individual using the following format :\n","      ## > *   1 = typical angina\n","      ## > *   2 = atypical angina\n","      ## > *   3 = non — anginal pain\n","      ## > *   4 = asymptotic\n","# *   Resting Blood Pressure: displays the resting blood pressure value of an individual in mmHg (unit)\n","# *   Serum Cholestrol: displays the serum cholesterol in mg/dl (unit)\n","# *   Fasting Blood Sugar: compares the fasting blood sugar value of an individual with 120mg/dl.\n","      ## > *   If fasting blood sugar > 120mg/dl then : 1 (true)\n","      ## > *   else : 0 (false)\n","# *   Resting ECG : displays resting electrocardiographic results\n","      ## > *   0 = normal\n","      ## > *   1 = having ST-T wave abnormality\n","      ## > *   2 = left ventricular hyperthrophy\n","# *   Max heart rate achieved : displays the max heart rate achieved by an individual.\n","# *   Exercise induced angina :\n","      ## > *   1 = yes\n","      ## > *   0 = no\n","# *   ST depression induced by exercise relative to rest: displays the value which is an integer or float.\n","# *   Peak exercise ST segment : \n","      ## > *   1 = upsloping\n","      ## > *   2 = flat\n","      ## > *   3 = downsloping\n","# *   Number of major vessels (0–3) colored by flourosopy : displays the value as integer or float.\n","# *   Thal : displays the thalassemia:\n","      ## > *   3 = normal\n","      ## > *   6 = fixed defect\n","      ## > *   7 = reversible defect\n","# *   Diagnosis of heart disease : Displays whether the individual is suffering from heart disease or not:\n","      ## > *   0 = absence, \n","      ## > *   1, 2, 3, 4 = present."],"metadata":{"id":"O2egT6zWoztB"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#@title Data load from GitHub\n","# Load a csv file from GitHub by coping a raw csv link\n","import numpy as np\n","import pandas as pd\n","url = 'https://raw.githubusercontent.com/AbdullahAlrhmoun/Heart-disease-prediction-model/master/processed.cleveland.data.csv'\n","headernames = ['age', 'sex', 'chest_pain', 'blood_press', 'chol','blood_sugar', 'ecg', \n","                    'max_rate','exc_ang', 'st_depress','slope', 'no_vess', 'thal', 'status']\n","df = pd.read_csv(url, names=headernames)\n","df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"gL18sAWpWWnE","executionInfo":{"status":"ok","timestamp":1682592566487,"user_tz":-120,"elapsed":746,"user":{"displayName":"Sonja Dimitrijević","userId":"13192049832098734700"}},"outputId":"897f03a5-950a-430b-9441-527c43c27248"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(303, 14)"]},"metadata":{},"execution_count":114}]}]}